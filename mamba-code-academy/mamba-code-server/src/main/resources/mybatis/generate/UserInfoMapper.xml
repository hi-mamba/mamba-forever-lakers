<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="space.mamba.dao.UserInfoMapper">
  <resultMap id="BaseResultMap" type="space.mamba.model.UserInfo">
    <!--@mbg.generated-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="CHAR" property="username" />
    <result column="password" jdbcType="CHAR" property="password" />
    <result column="email" jdbcType="CHAR" property="email" />
    <result column="mobile" jdbcType="CHAR" property="mobile" />
    <result column="reg_time" jdbcType="TIMESTAMP" property="regTime" />
    <result column="reg_ip" jdbcType="BIGINT" property="regIp" />
    <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime" />
    <result column="last_login_ip" jdbcType="BIGINT" property="lastLoginIp" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, username, `password`, email, mobile, reg_time, reg_ip, last_login_time, last_login_ip, 
    update_time, `status`, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from user_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from user_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="space.mamba.model.UserInfo" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into user_info (username, `password`, email, 
      mobile, reg_time, reg_ip, 
      last_login_time, last_login_ip, update_time, 
      `status`, create_time)
    values (#{username,jdbcType=CHAR}, #{password,jdbcType=CHAR}, #{email,jdbcType=CHAR}, 
      #{mobile,jdbcType=CHAR}, #{regTime,jdbcType=TIMESTAMP}, #{regIp,jdbcType=BIGINT}, 
      #{lastLoginTime,jdbcType=TIMESTAMP}, #{lastLoginIp,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="space.mamba.model.UserInfo" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null and username != ''">
        username,
      </if>
      <if test="password != null and password != ''">
        `password`,
      </if>
      <if test="email != null and email != ''">
        email,
      </if>
      <if test="mobile != null and mobile != ''">
        mobile,
      </if>
      <if test="regTime != null">
        reg_time,
      </if>
      <if test="regIp != null">
        reg_ip,
      </if>
      <if test="lastLoginTime != null">
        last_login_time,
      </if>
      <if test="lastLoginIp != null">
        last_login_ip,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null and username != ''">
        #{username,jdbcType=CHAR},
      </if>
      <if test="password != null and password != ''">
        #{password,jdbcType=CHAR},
      </if>
      <if test="email != null and email != ''">
        #{email,jdbcType=CHAR},
      </if>
      <if test="mobile != null and mobile != ''">
        #{mobile,jdbcType=CHAR},
      </if>
      <if test="regTime != null">
        #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="regIp != null">
        #{regIp,jdbcType=BIGINT},
      </if>
      <if test="lastLoginTime != null">
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null">
        #{lastLoginIp,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="space.mamba.model.UserInfo">
    <!--@mbg.generated-->
    update user_info
    <set>
      <if test="username != null and username != ''">
        username = #{username,jdbcType=CHAR},
      </if>
      <if test="password != null and password != ''">
        `password` = #{password,jdbcType=CHAR},
      </if>
      <if test="email != null and email != ''">
        email = #{email,jdbcType=CHAR},
      </if>
      <if test="mobile != null and mobile != ''">
        mobile = #{mobile,jdbcType=CHAR},
      </if>
      <if test="regTime != null">
        reg_time = #{regTime,jdbcType=TIMESTAMP},
      </if>
      <if test="regIp != null">
        reg_ip = #{regIp,jdbcType=BIGINT},
      </if>
      <if test="lastLoginTime != null">
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginIp != null">
        last_login_ip = #{lastLoginIp,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="space.mamba.model.UserInfo">
    <!--@mbg.generated-->
    update user_info
    set username = #{username,jdbcType=CHAR},
      `password` = #{password,jdbcType=CHAR},
      email = #{email,jdbcType=CHAR},
      mobile = #{mobile,jdbcType=CHAR},
      reg_time = #{regTime,jdbcType=TIMESTAMP},
      reg_ip = #{regIp,jdbcType=BIGINT},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      last_login_ip = #{lastLoginIp,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update user_info
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="username = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.username,jdbcType=CHAR}
        </foreach>
      </trim>
      <trim prefix="`password` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.password,jdbcType=CHAR}
        </foreach>
      </trim>
      <trim prefix="email = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.email,jdbcType=CHAR}
        </foreach>
      </trim>
      <trim prefix="mobile = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.mobile,jdbcType=CHAR}
        </foreach>
      </trim>
      <trim prefix="reg_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.regTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="reg_ip = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.regIp,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="last_login_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.lastLoginTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="last_login_ip = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.lastLoginIp,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="`status` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.status,jdbcType=TINYINT}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into user_info
    (username, `password`, email, mobile, reg_time, reg_ip, last_login_time, last_login_ip, 
      update_time, `status`, create_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.username,jdbcType=CHAR}, #{item.password,jdbcType=CHAR}, #{item.email,jdbcType=CHAR}, 
        #{item.mobile,jdbcType=CHAR}, #{item.regTime,jdbcType=TIMESTAMP}, #{item.regIp,jdbcType=BIGINT}, 
        #{item.lastLoginTime,jdbcType=TIMESTAMP}, #{item.lastLoginIp,jdbcType=BIGINT}, 
        #{item.updateTime,jdbcType=TIMESTAMP}, #{item.status,jdbcType=TINYINT}, #{item.createTime,jdbcType=TIMESTAMP}
        )
    </foreach>
  </insert>

<!--auto generated by MybatisCodeHelper on 2019-08-09-->
  <select id="findAllById" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from user_info
    where id=#{id,jdbcType=BIGINT}
  </select>

<!--auto generated by MybatisCodeHelper on 2019-08-09-->
  <select id="selectByAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from user_info
    where 1=1
    <if test="id != null">
      and id=#{id,jdbcType=BIGINT}
    </if>
    <if test="username != null and username != ''">
      and username=#{username,jdbcType=CHAR}
    </if>
    <if test="password != null and password != ''">
      and `password`=#{password,jdbcType=CHAR}
    </if>
    <if test="email != null and email != ''">
      and email=#{email,jdbcType=CHAR}
    </if>
    <if test="mobile != null and mobile != ''">
      and mobile=#{mobile,jdbcType=CHAR}
    </if>
    <if test="regTime != null">
      and reg_time=#{regTime,jdbcType=TIMESTAMP}
    </if>
    <if test="regIp != null">
      and reg_ip=#{regIp,jdbcType=BIGINT}
    </if>
    <if test="lastLoginTime != null">
      and last_login_time=#{lastLoginTime,jdbcType=TIMESTAMP}
    </if>
    <if test="lastLoginIp != null">
      and last_login_ip=#{lastLoginIp,jdbcType=BIGINT}
    </if>
    <if test="updateTime != null">
      and update_time=#{updateTime,jdbcType=TIMESTAMP}
    </if>
    <if test="status != null">
      and `status`=#{status,jdbcType=TINYINT}
    </if>
    <if test="createTime != null">
      and create_time=#{createTime,jdbcType=TIMESTAMP}
    </if>
  </select>


</mapper>